БИЛЕТЫ К ЗАЧЁТУ
###############

:date: 2015-12-03 10:30


.. default-role:: code
.. contents:: Содержание

Список вопросов на зачёте:
==========================

Вопросы по синтаксису Python 3:
-------------------------------

#. Литералы чисел и строк в Python.
#. Условный оператор и каскадная условная конструкция в Python.
#. Строки в Python. Методы find, count, replace, strip, upper, lower и другие.
#. Строки в Python. Срезы с двумя и тремя параметрами.
#. Кортежи в Python. Создание и использование. Кортежи переменных.
#. Списки в Python. Методы списков и операции со списками.
#. Срезы списков. Присваивание в срез. Проблема копирования списка.
#. Списки в Python. List comprehensions: генерация списков.
#. Цикл for и его особенности в Python. Функция range().
#. Двумерные массивы (списки списков). Вложенная генерация.
#. Классы в Python. Перегрузка операторов.
#. Классы в Python. Конструктор класса.
#. Классы в Python. Наследование.
#. Оператор yield и `функции-генераторы`_.
#. Исключения в Python. Генерирование и перехват исключений.
#. Именованные параметры функций. Значения параметров по умолчанию.

.. _`функции-генераторы`: http://blog.swlogic.eu/2012/06/14/python-generators-cheatsheet/

Алгоритмические и теоретические вопросы:
----------------------------------------

#. Позиционные системы счисления.
#. Связь двоичной и шестнадцатеричной систем счисления.
#. Основы алгебры логики. Операции И, ИЛИ, НЕ, исключающее или, импликация, эквиваленция. Таблицы истинности функций.
#. Основы алгебры логики. Свойства операций И и ИЛИ.
#. Основы алгебры логики. Операция НЕ. Законы де Моргана.
#. Основы алгебры логики. Табличное задание логической функции. Дизъюнктивная нормальная форма.
#. Структурное программирование. Декомпозиция задачи и проектирование «сверху-вниз».
#. Кодировки текста ASCII и Unicode.
#. Рекурсия. Прямой и обратный ход рекурсии. Стек вызовов.
#. Однопроходные алгоритмы: подсчёт, сумма, произведение.
#. Среднеквадратическое отклонение: однопроходный алгоритм.
#. Однопроходные алгоритмы: поиск числа в потоке, максимум.
#. Однопроходные алгоритмы: местоположение максимума, три максимальных элемента.
#. Тест простоты числа.
#. Разложение числа на множители.
#. Наивный поиск подстроки в строке.
#. Алгоритм обращения массива.
#. Алгоритм циклического сдвига в массиве.
#. Сортировка обезьяны. 
#. Сортировка вставками.
#. Сортировка выбором.
#. Сортировка методом пузырька.
#. Сортировка дурака.
#. Сортировка подсчётом.
#. Поразрядная сортировка.
#. Рекурсивные сортировки. `Быстрая сортировка`_.
#. Рекурсивные сортировки. Сортировка слиянием.
#. Пирамида (куча). Пирамидальная сортировка.
#. Виды сортировок. Устойчивость сортировок.
#. Алгоритм Евклида.
#. Вычисление чисел Фибоначчи.
#. Ханойские башни.
#. `Генерация всех перестановок` (рекурсивная).
#. Использование списка как стека. Метод pop().
#. `Динамическое программирование`_. `Задачи о Кузнечике на прямой`_.
#. `Динамическое программирование`_. Задачи о Короле на плоскости.
#. Списки: односвязный, двусвязный, кольцо.
#. Стек.
#. `Очередь`_.
#. Хеш-функция. Открытая хеш-таблица.
#. Хеш-функция. Закрытая хеш-таблица.
#. Поиск корня функции методом бисекции.
#. Поиск значения в упорядоченном массиве `методом бисекции`_.

.. _`Быстрая сортировка` :http://hecs.info/pages/19-20.html
.. _`Задачи о Кузнечике на прямой`: http://hecs.info/pages/16-16.html
.. _`Динамическое программирование`: http://hecs.info/pages/17-17.html
.. _`методом бисекции` :http://hecs.info/pages/19-19.html
.. _`Генерация всех перестановок`: http://hecs.info/pages/16-22.html
.. _`Очередь` :http://foxford.ru/wiki/informatika/ochered-na-python
