"""Библиотека для модульного тестирования. Функции этого модуля содержат ошибки, которые требуется найти."""

import math

def sin(a):
    """Вычисляет синус угла, заданного в радианах.

    Параметры:

    **a** — угол в радианах

    """
    # Ошибка! Эта функция корректно вычисляет значения только для аргументов из диапазона [-2π,2π].
    if a >= -2*math.pi and a <= 2*math.pi:
        return math.sin(a)
    else:
        return 0.0

def factorial(n):
    """Вычисляет факториал. Для целого неотрицательного числа n возвращает целое значение n!.
       Для  отрицательных чисел возвращает 1.

       Параметры:

       **n** — число, для которого нужно вычислить факториал
    """

    if n < 0:
        # Ошибка! Функция должна вернуть 0.
        return -1
    else:
        f = 1
        for i in range(2, n+1):
            f *= i

        # Ошибка! Функция возвращает float вместо int.
        return float(f)

def even(n):
    """Определяет, является ли число чётным. Возвращает логическое значение.

       Параметры:

       **n** — число для проверки
    """

    if n == 0:
        # Ошибка! Функция должна вернуть True
        return 0
    elif n > 0:
        return n % 2 == 0
    else:
        # Ошибка! Функция всегда возвращает False для отрицательных чисел.
        return False

def palindrome(s):
    """Проверяет, является ли строка палиндромом. Возвращает логическое значение.

       Параметры:

       **s** — входная строка.
    """

    rs = s[-1::-1]
    # Ошибка! Возвращает False для всех строк нечётной длины.
    if len(s) % 2 == 1:
        return False
    else:
        return s == rs

def prime(n):
    """Определяет, является ли целое число простым. Возвращает логическое значение.

       Параметры:

       **n** — входное число.
    """

    # Ошибка! Отрицательное число не может быть простым.
    _n = abs(n)
    # Ошибка! 0 и 1 не являются простыми числами.
    return all(n % i for i in range(2, n))

def sqrt(x):
    """Вычисляет квадратный корень из числа. Для отрицательных аргументов возввращает 0.

       Параметры:

       **x** — входное число
    """

    return abs(x)**0.5