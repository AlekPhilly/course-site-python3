Робот
#####

:date: 2016-09-20 21:30

.. default-role:: code
.. contents:: Содержание


Робот
=====

Подготовка к выполнению работы
------------------------------

Установка зависимостей
++++++++++++++++++++++

Зачастую при написании программ возникает необходимость подключить сторонние
модули, в которых уже реализован определённый функционал. Модули обычно
группируются в так называемые *пакеты*, т.е. пакет может может включать в себя
несколько модулей. Пакеты, от которых программа *зависит* называются,
соответственно, *зависимостями*.

Для установки сторонних пакетов, т.е. тех, которые не входят в состав
стандартной библиотеки языка Python,  существует пакетный менеджер `pip`.

**Установите** пакет `pyrob` при помощи следующей команды:

.. code-block:: bash

   pip3 install --user --upgrade git+https://github.com/mipt-cs-on-python3/pyrob

Обычно пакеты устанавливаются просто при помощи указания имени (например, `pip3
install pelican`), но в данном случае нужного пакета нет в репозитории `PyPI`__,
поэтому мы выполняем установку непосредственно с GitHub'a.

.. __: https://pypi.python.org/pypi

Ключ `--user` говорит пакетному менеджеру установить пакет только для текущего
пользователя, а ключ `--upgrade` указывает на то, что в том случае, если пакет
уже установлен в системе, он должен быть обновлён.

Создание структуры проекта
++++++++++++++++++++++++++

Для упрощения процесса проверки задач в данной работе предполагается
использовать определённую `структуру проекта`__. Спросите преподавателя о том,
как создать необходимую структуру проекта на своём компьютере.
   
.. __: https://github.com/mipt-cs-on-python3/robot-tasks

Команды робота
--------------

Данная работа полностью посвящена написанию алгоритмов для исполнителя Робот.

Робот живёт на прямоугольном поле, по периметру огороженном стенами. Поле разделено на клетки, между которыми тоже
могут встречаться стены.

Клетка поля может находиться в одном из трёх состояний:

* пустая клетка;
* помеченная для закрашивания клетка;
* закрашенная клетка.

Также есть специальная клетка, отмеченная чёрной точкой, куда робот должен прийти после выполнения алгоритма.

Список команд робота:

+------------------------+------------------------------------------------------------------------------------+
| Команда                | Описание                                                                           |
+========================+====================================================================================+
| move_left(n=1)         | Пройти `n` (1 по умолчанию) клеток влево                                           |
+------------------------+------------------------------------------------------------------------------------+
| move_right(n=1)        | Пройти `n` (1 по умолчанию) клеток вправо                                          |
+------------------------+------------------------------------------------------------------------------------+
| move_up(n=1)           | Пройти `n` (1 по умолчанию) клеток вверх                                           |
+------------------------+------------------------------------------------------------------------------------+
| move_down(n=1)         | Пройти `n` (1 по умолчанию) клеток вниз                                            |
+------------------------+------------------------------------------------------------------------------------+
| wall_is_above()        | Возвращает True, если сверху стена, иначе — False                                  |
+------------------------+------------------------------------------------------------------------------------+
| wall_is_beneath()      | Возвращает True, если снизу стена, иначе — False                                   |
+------------------------+------------------------------------------------------------------------------------+
| wall_is_on_the_left()  | Возвращает True, если слева стена, иначе — False                                   |
+------------------------+------------------------------------------------------------------------------------+
| wall_is_on_the_right() | Возвращает True, если справа стена, иначе — False                                  |
+------------------------+------------------------------------------------------------------------------------+
| fill_cell()            | Заполнить текущую клетку                                                           |
+------------------------+------------------------------------------------------------------------------------+
| cell_is_filled()       | Возвращает True, если текущая клетка заполнена                                     |
+------------------------+------------------------------------------------------------------------------------+
| mov(r, v)              | Поместить значение `v` в регистр `r`                                               |
+------------------------+------------------------------------------------------------------------------------+


Примеры программы для робота
++++++++++++++++++++++++++++

Для правильного решения каждой задачи, если больше ничего не сказано, требуется выполнить следующие условия:

* из начальной клетки перейти в клетку, отмеченную чёрной точкой;
* закрасить все бирюзовые клетки;
* ни разу не врезаться в стену.

После завершения выполнения алгоритма робот может быть в одном из четырёх состояний.

Состояние №1: штатное завершение, задача решена
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

   #!/usr/bin/python3

   from pyrob.api import *
   
   
   @task
   def example1():
   
       for i in range(9):
           move_right()
           move_down()
   
   
   if __name__ == '__main__':
       run_tasks()


.. image:: {filename}/images/lab4/demo1.gif
   :width: 251px


Состояние №2: штатное завершение, задача не решена
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

   #!/usr/bin/python3
   
   from pyrob.api import *
   
   
   @task
   def example1():
   
       for i in range(4):
           move_right()
           move_down()
   
   
   if __name__ == '__main__':
       run_tasks()

.. image:: {filename}/images/lab4/demo2.gif
   :width: 251px


Состояние №3: нештатное завершение, ошибка времени выполнения
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

   #!/usr/bin/python3
   
   from pyrob.api import *
   
   
   @task
   def example1():
   
       for i in range(9):
           move_right()
           move_down()
   
           if i == 6:
               z = 1 / 0
   
   
   if __name__ == '__main__':
       run_tasks()

.. image:: {filename}/images/lab4/demo3.gif
   :width: 251px


Состояние №4: нештатное завершение, робот врезался в стену
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

   #!/usr/bin/python3
   
   from pyrob.api import *
   
   
   @task
   def example1():
   
       for i in range(10):
           move_right()
           move_down()
   
   if __name__ == '__main__':
       run_tasks()

.. image:: {filename}/images/lab4/demo4.gif
   :width: 251px

Упражнение №1: простые последовательности команд
------------------------------------------------

Задача №1: task_1_1
+++++++++++++++++++

Дойти до конечной точки.

.. image:: {filename}/images/lab4/task_1_1.png
   :width: 251px

Задача №2: task_1_2
+++++++++++++++++++

Дойти до конечной точки, закрасить одну клетку.

.. image:: {filename}/images/lab4/task_1_2.png
   :width: 251px


Упражнение №1.1: условное исполнение
++++++++++++++++++++++++++++++++++++

Задача №3: task_3_1
~~~~~~~~~~~~~~~~~~~

Дойти до стены. Расстояние до стены не известно.

.. image:: {filename}/images/lab4/task_3_1.png
   :width: 251px

Задача №4: task_3_3
~~~~~~~~~~~~~~~~~~~

С трёх сторон стены. Выйти в свободную сторону. Положение выхода не известно.

.. image:: {filename}/images/lab4/task_3_3.png
   :width: 251px

Упражнение №2: циклы с условием
-------------------------------

Задача №5: task_5_2
+++++++++++++++++++

Дойти до конца стены. Расстояние не известно.

.. image:: {filename}/images/lab4/task_5_2.png
   :width: 251px

Задача №6: task_5_3
+++++++++++++++++++

Дойти до конца стены. Расстояние не известно.

.. image:: {filename}/images/lab4/task_5_3.png
   :width: 502px

Задача №7: task_5_4
+++++++++++++++++++

Обойти стену. Размеры стены и расстояние до неё неизвестны. Стена одна.

.. image:: {filename}/images/lab4/task_5_4.png
   :width: 400px

Задача №8: task_5_7
+++++++++++++++++++

Выйти из коридора. Есть проёмы сверху или снизу.

.. image:: {filename}/images/lab4/task_5_7.png
   :width: 502px


Упражнение №3: условные действия на каждой итерации цикла
---------------------------------------------------------

Задача №9: task_8_2
+++++++++++++++++++

Закрасить клетки. Расстояние до стены не известно.

.. image:: {filename}/images/lab4/task_8_2.png
   :width: 502px

Задача №10: task_8_3
++++++++++++++++++++

Закрасить клетки. Расстояние до стены не известно.

.. image:: {filename}/images/lab4/task_8_3.png
   :width: 502px

Задача №11: task_8_4
++++++++++++++++++++

Закрасить клетки. Расстояние до стены не известно.

.. image:: {filename}/images/lab4/task_8_4.png
   :width: 502px

Задача №12: task_8_6
++++++++++++++++++++

Закрасить клетки. Расстояние до стены не известно.

.. image:: {filename}/images/lab4/task_8_6.png
   :width: 502px

Задача №13: task_8_10
+++++++++++++++++++++

Закрасить клетки. Расстояние до стены не известно.

.. image:: {filename}/images/lab4/task_8_10.png
   :width: 502px

Задача №14: task_8_11
+++++++++++++++++++++

Закрасить клетки. Расстояние до стены не известно.

.. image:: {filename}/images/lab4/task_8_11.png
   :width: 502px


Упражнение №4: циклы, вложенные в условия
-----------------------------------------

Задача №15: task_8_21
+++++++++++++++++++++

Перейти в противоположный угол. В начальный момент робот находится в углу, но не известно, в каком. Размеры поля не известны.

.. image:: {filename}/images/lab4/task_8_21.png
   :width: 251px

Задача №16: task_8_22
+++++++++++++++++++++

Дойти до конца тупика. Тупик имеет форму буквы Г (влево или вправо). Размеры тупика не известны.

.. image:: {filename}/images/lab4/task_8_22.png
   :width: 300px

Задача №17: task_8_27
+++++++++++++++++++++

Перейти на вторую закрашенную клетку. Клетка может быть как справа, так и слева.

.. image:: {filename}/images/lab4/task_8_27.png
   :width: 300px

Задача №18: task_8_28
+++++++++++++++++++++

Выйти из ловушки. Где находится выход, не известно.

.. image:: {filename}/images/lab4/task_8_28.png
   :width: 300px

Задача №19: task_8_29
+++++++++++++++++++++

Выйти из ловушки. Выход может находиться как справа, так и слева. Выхода может не быть, в этом случае остановиться в правом тупике.

.. image:: {filename}/images/lab4/task_8_29.png
   :width: 251px


Упражнение №5: вложенные циклы
------------------------------

Задача №20: task_4_3
++++++++++++++++++++

Закрасить отмеченные клетки.

.. image:: {filename}/images/lab4/task_4_3.png
   :width: 502px

Задача №21: task_4_11
+++++++++++++++++++++

Закрасить отмеченные клетки.

.. image:: {filename}/images/lab4/task_4_11.png
   :width: 400px

Задача №22: task_5_10
+++++++++++++++++++++

Закрасить всё поле. Размеры поля неизвестны.

.. image:: {filename}/images/lab4/task_5_10.png
   :width: 200px


Задача №23: task_6_6
++++++++++++++++++++

Закрасить коридоры и вернуться. Количество и длины коридоров не известны.

.. image:: {filename}/images/lab4/task_6_6.png
   :width: 502px

Упражнение №5.1: использование подпрограмм
++++++++++++++++++++++++++++++++++++++++++

Задача №24: task_2_1
~~~~~~~~~~~~~~~~~~~~

Закрасить клетки.

.. image:: {filename}/images/lab4/task_2_1.png
   :width: 251px

Задача №25: task_2_2
~~~~~~~~~~~~~~~~~~~~

Закрасить клетки.

.. image:: {filename}/images/lab4/task_2_2.png
   :width: 502px

Задача №26: task_2_4
~~~~~~~~~~~~~~~~~~~~

Закрасить клетки.

.. image:: {filename}/images/lab4/task_2_4.png
   :width: 502px

Упражнение №6: использование переменных-флагов и переменных-счётчиков
---------------------------------------------------------------------

Задача №27: task_7_5
++++++++++++++++++++

Закрасить клетки с увеличивающимся интервалом. Расстояние до стены не известно.

.. image:: {filename}/images/lab4/task_7_5.png
   :width: 502px

Задача №28: task_7_6
++++++++++++++++++++

Остановится на пятой закрашенной клетке. Количество закрашенных клеток не известно, но точно больше пяти.

.. image:: {filename}/images/lab4/task_7_6.png
   :width: 502px

Задача №29: task_7_7
++++++++++++++++++++

Остановится на третьей подряд закрашенной клетке. Если нет трёх подряд закрашенных клеток, то остановиться у правой стены. Расстояние до стены не известно.

.. image:: {filename}/images/lab4/task_7_7.png
   :width: 502px

Задача №30: task_9_3
++++++++++++++++++++

Закрасить поле «треугольниками». Размер поля не известен, но поле всегда квадратное с нечётным количество клеток по каждой стороне.

.. image:: {filename}/images/lab4/task_9_3.png
   :width: 250px

Задача №31: task_8_30
+++++++++++++++++++++

Добраться до нижнего уровня. Количество уровней не известно. Расстояние между стенами не известно. В каждой стене точно есть ровно один проём.

.. image:: {filename}/images/lab4/task_8_30.png
   :width: 502px

Задача №32: task_8_18
+++++++++++++++++++++

Закрасить отмеченные клетки. В регистр `ax` записать количество клеток, которые были закрашены ещё до того, как робот начал двигаться. Количество и размеры коридоров не известны.

.. image:: {filename}/images/lab4/task_8_18.png
   :width: 502px

